# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.13' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
#we need go 1.13 to run certain code this installs newer version
- task: GoTool@0
  inputs:
    version: '1.13'
#sets up go wrokspace
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

#downloads rego.pem that client uses to connect over ssh on aws
- task: DownloadSecureFile@1
  name: rego
  inputs:
    secureFile: 'rego.pem'
- script: |
    sudo mv $(rego.secureFilePath) $(modulePath)
#downloads the code and builds client binary
- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    go build -o clientbin .
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'
#installs docker
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'
#builds and publishes docker client image to docker hub
- task: Docker@2
  inputs:
    containerRegistry: 'revgoproject3'
    repository: 'revgoproject3/client'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
#downloads the code and builds slackbot binary
- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    cd slackbot
    go build -o botbin .
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'
    
#builds and publishes docker slackbot image to docker hub
- task: Docker@2
  inputs:
    containerRegistry: 'revgoproject3'
    repository: 'revgoproject3/slackbot'
    command: 'buildAndPush'
    Dockerfile: '**/slackbot/Dockerfile'
    tags: 'latest'

#published deployment.yaml as a artifact so that the release pipeline
#can deploy the correct configurations for the kubernetes cluster
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(GOPATH)/src/github.com/$(build.repository.name)/deployment.yaml'
    ArtifactName: 'drop'
    publishLocation: 'Container'
